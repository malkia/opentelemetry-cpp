module(
    name = "otel_sdk",
    version = "1.16.1-dll",
)

bazel_dep(name = "abseil-cpp", version = "20240722.0")
bazel_dep(name = "aspect_bazel_lib", version = "2.8.1")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "boringssl", version = "0.0.0-20240530-2db0eb3")
bazel_dep(name = "curl", version = "8.8.0.bcr.1")
bazel_dep(name = "depend_on_what_you_use", version = "0.4.0")
bazel_dep(name = "google_benchmark", version = "1.8.5", dev_dependency = True)
bazel_dep(name = "googletest", version = "1.15.2", dev_dependency = True)
bazel_dep(name = "grpc", version = "1.66.0.bcr.1", repo_name = "com_github_grpc_grpc")
bazel_dep(name = "nlohmann_json", version = "3.11.3")
bazel_dep(name = "platforms", version = "0.0.10")
bazel_dep(name = "rules_cc", version = "0.0.9")
bazel_dep(name = "rules_pkg", version = "1.0.1")
bazel_dep(name = "rules_proto", version = "6.0.2")
bazel_dep(name = "zlib", version = "1.3.1.bcr.3")
bazel_dep(name = "opentracing-cpp", version = "1.6.0")
bazel_dep(name = "rules_multitool", version = "0.12.0")

bazel_dep(name = "opentelemetry-proto", version = "1.3.2")
archive_override(
    module_name = "opentelemetry-proto",
    integrity = "sha256-wGnA2WE3zwBdNEEfpn3TtvH4xkrx5/sv4AiaQcQlrNc=",
    patch_strip = 1,
    # Copied from https://github.com/bazelbuild/bazel-central-registry/tree/main/modules/opentelemetry-proto/1.3.1/patches
    patches = ["bazel/opentelemetry-proto.patch"],
    strip_prefix = "opentelemetry-proto-1.3.2",
    urls = "https://github.com/open-telemetry/opentelemetry-proto/archive/refs/tags/v1.3.2.tar.gz",
)

bazel_dep(name = "prometheus-cpp", version = "1.2.4")
archive_override(
    module_name = "prometheus-cpp",
    integrity = "sha256-uElFYvmIrzXsElYbbrNS0Mvtfj99aKae2nhsZhCvxG4=",
    strip_prefix = "prometheus-cpp-6492e820cdff7e7345d46d82b43735aaea542098",
    urls = "https://github.com/jupp0r/prometheus-cpp/archive/6492e820cdff7e7345d46d82b43735aaea542098.zip",
)

use_repo(
    use_extension("@bazel_tools//tools/cpp:cc_configure.bzl", "cc_configure_extension"),
    "local_config_cc",
)

multitool = use_extension("@rules_multitool//multitool:extension.bzl", "multitool")
multitool.hub(lockfile = "@@//:multitool.lock.json")
use_repo(multitool, "multitool")
